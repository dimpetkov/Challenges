import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.IntStream;

import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

public class AmazonDemoTest {


    class Result {

        /*
         * Complete the 'numberOfItems' function below.
         *
         * The function is expected to return an INTEGER_ARRAY.
         * The function accepts following parameters:
         *  1. STRING s
         *  2. INTEGER_ARRAY startIndices
         *  3. INTEGER_ARRAY endIndices
         */

        public static List<Integer> numberOfItems(String s, List<Integer> startIndices, List<Integer> endIndices) {
            // Write your code here
            boolean compartmentOpen = false;
            List<Integer> arr = new ArrayList<>();
            int counter = 0;
            for (int i = startIndices.get(counter) - 1; i < endIndices.get(counter); i++) {
                int itemsCount = 0;
                if(s.charAt(i) == '|') {
                    compartmentOpen = true;
                } else if (s.charAt(i) == '|' && compartmentOpen) {
                    // compartmentOpen = false;
                    arr.add(itemsCount);
                    counter++;
                    itemsCount = 0;
                }

                if(compartmentOpen && s.charAt(i) == '*') {
                    itemsCount++;
                }
                if (i == endIndices.get(counter) && arr.size() == counter) {
                    arr.add(0);
                    counter++;
                }
            }
            return arr;
        }
    }

    public class Solution {
        public static void main(String[] args) throws IOException {
            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
            BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

            String s = bufferedReader.readLine();

            int startIndicesCount = Integer.parseInt(bufferedReader.readLine().trim());

            List<Integer> startIndices = IntStream.range(0, startIndicesCount).mapToObj(i -> {
                        try {
                            return bufferedReader.readLine().replaceAll("\\s+$", "");
                        } catch (IOException ex) {
                            throw new RuntimeException(ex);
                        }
                    })
                    .map(String::trim)
                    .map(Integer::parseInt)
                    .collect(toList());

            int endIndicesCount = Integer.parseInt(bufferedReader.readLine().trim());

            List<Integer> endIndices = IntStream.range(0, endIndicesCount).mapToObj(i -> {
                        try {
                            return bufferedReader.readLine().replaceAll("\\s+$", "");
                        } catch (IOException ex) {
                            throw new RuntimeException(ex);
                        }
                    })
                    .map(String::trim)
                    .map(Integer::parseInt)
                    .collect(toList());

            List<Integer> result = Result.numberOfItems(s, startIndices, endIndices);

            bufferedWriter.write(
                    result.stream()
                            .map(Object::toString)
                            .collect(joining("\n"))
                            + "\n"
            );

            bufferedReader.close();
            bufferedWriter.close();
        }
    }

}
